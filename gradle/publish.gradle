apply plugin: 'maven-publish'
apply plugin: 'signing'

ext {
    groupId = 'io.github.rmarinsky'
}

java {
    withJavadocJar()
    withSourcesJar()
}

tasks.withType(Jar).configureEach {
    manifest {
        attributes(
                "Automatic-Module-Name": project.groupId + '.' + project.artifactId.replace('-', '.'),
                "Implementation-Title": project.groupId + '.' + project.artifactId,
                "Implementation-Version": archiveVersion,
                "Implementation-Vendor": "https://github.com/rmarinsky")
    }
}


task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = "sources"
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifact sourceJar

            groupId = project.groupId
            artifactId = project.artifactId
            version = project.version

            pom {
                name = "drama"
                description = 'drama = concise wrapper for Playwright in Selenide style'
                url = 'https://github.com/rmarinsky/drama'
                inceptionYear = '2023'
                licenses {
                    license {
                        name = 'MIT'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id = 'rmarinsky'
                        name = 'Roman Marinskyi'
                    }
                }
                scm {
                    connection = 'scm:git@github.com:rmarinsky/drama.git'
                    developerConnection = 'scm:git@github.com:rmarinsky/drama.git'
                    url = 'https://github.com/rmarinsky/drama'
                }
            }
        }
    }
}

signing {
    useInMemoryPgpKeys(
            System.getProperty("SIGNING_KEYID"),
            System.getProperty("SINGING_SECRETKEYRINGFILE"),
            System.getProperty("SIGNING_PASSWORD")
    )
    sign publishing.publications.maven
}

publishing {
    repositories {
        maven {
            name 'Maven'
            url 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
            credentials {
                username = System.getProperty("SONAR_USERNAME")
                password = System.getProperty("SONAR_PASSWORD")
            }
        }
    }
}